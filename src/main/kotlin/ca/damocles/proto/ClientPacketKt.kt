//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: packets.proto

package ca.damocles.proto;

@kotlin.jvm.JvmSynthetic
inline fun clientPacket(block: ca.damocles.proto.ClientPacketKt.Dsl.() -> kotlin.Unit): ca.damocles.proto.Packets.ClientPacket =
  ca.damocles.proto.ClientPacketKt.Dsl._create(ca.damocles.proto.Packets.ClientPacket.newBuilder()).apply { block() }._build()
object ClientPacketKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: ca.damocles.proto.Packets.ClientPacket.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: ca.damocles.proto.Packets.ClientPacket.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): ca.damocles.proto.Packets.ClientPacket = _builder.build()
  }
  @kotlin.jvm.JvmSynthetic
  inline fun loginPacket(block: ca.damocles.proto.ClientPacketKt.LoginPacketKt.Dsl.() -> kotlin.Unit): ca.damocles.proto.Packets.ClientPacket.LoginPacket =
    ca.damocles.proto.ClientPacketKt.LoginPacketKt.Dsl._create(ca.damocles.proto.Packets.ClientPacket.LoginPacket.newBuilder()).apply { block() }._build()
  object LoginPacketKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    class Dsl private constructor(
      private val _builder: ca.damocles.proto.Packets.ClientPacket.LoginPacket.Builder
    ) {
      companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: ca.damocles.proto.Packets.ClientPacket.LoginPacket.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): ca.damocles.proto.Packets.ClientPacket.LoginPacket = _builder.build()

      /**
       * <code>string email = 1;</code>
       */
      var email: kotlin.String
        @JvmName("getEmail")
        get() = _builder.getEmail()
        @JvmName("setEmail")
        set(value) {
          _builder.setEmail(value)
        }
      /**
       * <code>string email = 1;</code>
       */
      fun clearEmail() {
        _builder.clearEmail()
      }

      /**
       * <code>string password = 2;</code>
       */
      var password: kotlin.String
        @JvmName("getPassword")
        get() = _builder.getPassword()
        @JvmName("setPassword")
        set(value) {
          _builder.setPassword(value)
        }
      /**
       * <code>string password = 2;</code>
       */
      fun clearPassword() {
        _builder.clearPassword()
      }
    }
  }
  @kotlin.jvm.JvmSynthetic
  inline fun closePacket(block: ca.damocles.proto.ClientPacketKt.ClosePacketKt.Dsl.() -> kotlin.Unit): ca.damocles.proto.Packets.ClientPacket.ClosePacket =
    ca.damocles.proto.ClientPacketKt.ClosePacketKt.Dsl._create(ca.damocles.proto.Packets.ClientPacket.ClosePacket.newBuilder()).apply { block() }._build()
  object ClosePacketKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    class Dsl private constructor(
      private val _builder: ca.damocles.proto.Packets.ClientPacket.ClosePacket.Builder
    ) {
      companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: ca.damocles.proto.Packets.ClientPacket.ClosePacket.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): ca.damocles.proto.Packets.ClientPacket.ClosePacket = _builder.build()
    }
  }
  @kotlin.jvm.JvmSynthetic
  inline fun createAccountPacket(block: ca.damocles.proto.ClientPacketKt.CreateAccountPacketKt.Dsl.() -> kotlin.Unit): ca.damocles.proto.Packets.ClientPacket.CreateAccountPacket =
    ca.damocles.proto.ClientPacketKt.CreateAccountPacketKt.Dsl._create(ca.damocles.proto.Packets.ClientPacket.CreateAccountPacket.newBuilder()).apply { block() }._build()
  object CreateAccountPacketKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    class Dsl private constructor(
      private val _builder: ca.damocles.proto.Packets.ClientPacket.CreateAccountPacket.Builder
    ) {
      companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: ca.damocles.proto.Packets.ClientPacket.CreateAccountPacket.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): ca.damocles.proto.Packets.ClientPacket.CreateAccountPacket = _builder.build()

      /**
       * <code>string email = 1;</code>
       */
      var email: kotlin.String
        @JvmName("getEmail")
        get() = _builder.getEmail()
        @JvmName("setEmail")
        set(value) {
          _builder.setEmail(value)
        }
      /**
       * <code>string email = 1;</code>
       */
      fun clearEmail() {
        _builder.clearEmail()
      }

      /**
       * <code>string username = 2;</code>
       */
      var username: kotlin.String
        @JvmName("getUsername")
        get() = _builder.getUsername()
        @JvmName("setUsername")
        set(value) {
          _builder.setUsername(value)
        }
      /**
       * <code>string username = 2;</code>
       */
      fun clearUsername() {
        _builder.clearUsername()
      }

      /**
       * <code>string password = 3;</code>
       */
      var password: kotlin.String
        @JvmName("getPassword")
        get() = _builder.getPassword()
        @JvmName("setPassword")
        set(value) {
          _builder.setPassword(value)
        }
      /**
       * <code>string password = 3;</code>
       */
      fun clearPassword() {
        _builder.clearPassword()
      }
    }
  }
  @kotlin.jvm.JvmSynthetic
  inline fun pongPacket(block: ca.damocles.proto.ClientPacketKt.PongPacketKt.Dsl.() -> kotlin.Unit): ca.damocles.proto.Packets.ClientPacket.PongPacket =
    ca.damocles.proto.ClientPacketKt.PongPacketKt.Dsl._create(ca.damocles.proto.Packets.ClientPacket.PongPacket.newBuilder()).apply { block() }._build()
  object PongPacketKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    class Dsl private constructor(
      private val _builder: ca.damocles.proto.Packets.ClientPacket.PongPacket.Builder
    ) {
      companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: ca.damocles.proto.Packets.ClientPacket.PongPacket.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): ca.damocles.proto.Packets.ClientPacket.PongPacket = _builder.build()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun ca.damocles.proto.Packets.ClientPacket.copy(block: ca.damocles.proto.ClientPacketKt.Dsl.() -> kotlin.Unit): ca.damocles.proto.Packets.ClientPacket =
  ca.damocles.proto.ClientPacketKt.Dsl._create(this.toBuilder()).apply { block() }._build()
@kotlin.jvm.JvmSynthetic
inline fun ca.damocles.proto.Packets.ClientPacket.LoginPacket.copy(block: ca.damocles.proto.ClientPacketKt.LoginPacketKt.Dsl.() -> kotlin.Unit): ca.damocles.proto.Packets.ClientPacket.LoginPacket =
  ca.damocles.proto.ClientPacketKt.LoginPacketKt.Dsl._create(this.toBuilder()).apply { block() }._build()
@kotlin.jvm.JvmSynthetic
inline fun ca.damocles.proto.Packets.ClientPacket.ClosePacket.copy(block: ca.damocles.proto.ClientPacketKt.ClosePacketKt.Dsl.() -> kotlin.Unit): ca.damocles.proto.Packets.ClientPacket.ClosePacket =
  ca.damocles.proto.ClientPacketKt.ClosePacketKt.Dsl._create(this.toBuilder()).apply { block() }._build()
@kotlin.jvm.JvmSynthetic
inline fun ca.damocles.proto.Packets.ClientPacket.CreateAccountPacket.copy(block: ca.damocles.proto.ClientPacketKt.CreateAccountPacketKt.Dsl.() -> kotlin.Unit): ca.damocles.proto.Packets.ClientPacket.CreateAccountPacket =
  ca.damocles.proto.ClientPacketKt.CreateAccountPacketKt.Dsl._create(this.toBuilder()).apply { block() }._build()
@kotlin.jvm.JvmSynthetic
inline fun ca.damocles.proto.Packets.ClientPacket.PongPacket.copy(block: ca.damocles.proto.ClientPacketKt.PongPacketKt.Dsl.() -> kotlin.Unit): ca.damocles.proto.Packets.ClientPacket.PongPacket =
  ca.damocles.proto.ClientPacketKt.PongPacketKt.Dsl._create(this.toBuilder()).apply { block() }._build()
